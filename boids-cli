#!./env/bin/python

from random import randrange
from shutil import get_terminal_size
from modules.boid import Boid
from modules.window import Window

min_distance = 2
term = get_terminal_size((80, 20))
window = Window(term.lines, term.columns)
boids = []
go_on = True
target = [0, 0]

def init():
    for i in range(randrange(window.x)):
        randx = randrange(window.x)
        randy = randrange(window.y)
        randSpeed = randrange(3) + 1
        boids.append(Boid(randx, randy, randSpeed))
    return

def rule2(boid):
    movement = [boid.x, boid.y]
    for b in boids:
        if b != boid:
            if (abs((b.x - boid.x) + (b.y - boid.y)) < min_distance):
                movement[0] -= b.x - boid.x
                movement[1] -= b.y - boid.y
    print('Boid[%i, %i] -> %s' %(boid.x, boid.y, movement))
    boid.towards(movement[0], movement[1])

def rule1(boid):
    # First we calculate the centre of mass of the boids and store it inside target
    total = [0, 0]
    for b in boids:
        if b != boid:
            total[0] += b.x
            total[1] += b.y
    target[0] = total[0] // len(boids)
    target[1] = total[1] // len(boids)
    # Then we move the boid towards this point
    boid.towards(target[0], target[1])
    return

def move():
    for boid in boids:
        rule1(boid)
        rule2(boid)
    return

def render():
    for boid in boids:
        window.set(boid.x, boid.y, boid.char)
    window.display()
    window.flush()

def main():
    init()
    while go_on:
        move()
        render()

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt as e:
        print("\nBye !")
